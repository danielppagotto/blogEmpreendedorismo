[
  {
    "path": "posts/welcome/",
    "title": "Fase 1 - O primeiro contato",
    "description": "Vamos aquecer os motores! Esse é o primeiro passo para perder o medo do R!",
    "author": [
      {
        "name": "Daniel Pagotto",
        "url": "https://www.linkedin.com/in/daniel-do-prado-pagotto-bab62a50/"
      }
    ],
    "date": "2021-04-17",
    "categories": [],
    "contents": "\r\nO primeiro contato\r\nNessa aula falaremos sobre\r\nO R como umas calculadora\r\nAtribuições de variáveis\r\nVetores, Matrizes e Dataframes\r\nO R é uma linguagem de programação, em outras palavras, é o intérprete que vai permitir você conversar com o computador. Cada linha de script deve ser encarada como um comando que você fala: “R, executa tal coisa para mim?” (não, esquece de pedir por favor, seja educad@!).\r\nEntão, como primeiro passo, vou falar para você que o R é calculadora, vamos fazer operações básicas nele? Insira as operações na tela de script e rode (basta apertar “ctrl + enter” com o cursor de digitação sobre a linha de comando).\r\n\r\n\r\n5 + 4  # soma\r\n\r\n6 - 10 # subtração\r\n\r\n20 * 4 # multiplicação\r\n\r\n50 / 2 # divisão\r\n\r\nsqrt(25) # sqrt vem de SQuare RooT (raiz quadrada em inglês)\r\n\r\n5^2 # potenciação\r\n\r\n5 * (10 + (10/2)) # o R interpreta a ordem das operações igual você aprendeu lá na escola!\r\n                  # Você pode usar parênteses para controlar a ordem das operações\r\n\r\n\r\n\r\nAtribuição de variáveis\r\nVocê pode guardar o valor em uma objeto para que possa usar em seguida. Veja bem, vou colocar meu peso em uma variável chamada “pesoDaniel”\r\n\r\n\r\npesoDaniel <- 83\r\n\r\npesoPosDieta <- pesoDaniel - 4    # Um dia chego lá!\r\n\r\n\r\n\r\nNote que posso atribuir valores de diferentes tipos, como numéricos, characteres (“letras”), fatores(“palavras”) e booleanos (verdadeiro ou falso)\r\n\r\n\r\nx <- 5 + 5\r\n\r\ny <- 10 - 16\r\n\r\na <- 9\r\n\r\nsoma <- a + x\r\n\r\nnome <- \"daniel\" # isso é um factor\r\n\r\ncerto <- TRUE  # isso é um boolean\r\n\r\n\r\n\r\nPerceba que as atribuições que você gerou foram armazenadas e encontram-se no campo “Environment” ao lado direito do RStudio.\r\nVamos criar um programinha que calcula o Índice de Massa Corpórea (IMC). Para quem não lembra, basta dividir o peso pelo quadrado da altura.\r\n\r\n\r\npesoDaniel <- 83\r\n\r\nalturaDaniel <- 1.78  \r\n\r\nimcDaniel <- pesoDaniel/alturaDaniel**2\r\n\r\nimcDaniel\r\n\r\n\r\n[1] 26.19619\r\n\r\nIMC\r\nSituação\r\n<16\r\nSubpeso Severo\r\n16 a 19.9\r\nSubpeso\r\n20 a 24.9\r\nNormal\r\n25 a 29.9\r\nSobrepeso\r\n30 a 39.9\r\nObeso\r\n>40\r\nObeso Mórbido\r\nAgora vamos fazer o IMC desse pessoa aqui embaixo:\r\nNome\r\nPeso\r\nAltura\r\nAlice\r\n65\r\n1.60\r\nGilmar\r\n95\r\n1.78\r\nCecília\r\n75\r\n1.80\r\nBianca\r\n77\r\n1.68\r\nValentina\r\n80\r\n1.72\r\nAugusto\r\n68\r\n1.65\r\nAí você pode me perguntar: “Daniel, vou ter que fazer de um a um?”. Poderia, mas calma… Existem várias formas de resolver, mas para fins didáticos, vou apresentar uma estrutura de dados chamada vetor. O vetor é um conjunto de valores de um mesmo tipo (ex.: numérico, chacarcter). Dito isso, vamos criar um vetor de pesos e um vetor de alturas. Para criar um vetor, basta fazer como descrito abaixo.\r\n\r\n\r\n# trabalhando com vetores\r\npesos <- c(56, 95, 65, 77, 80, 68)\r\n\r\nalturas <- c(1.60, 1.78, 1.80, 1.68, 1.72, 1.65)\r\n\r\nimc <- pesos/alturas**2\r\n\r\nimc # aqui temos um vetor com o imc de todas pessoas\r\n\r\n\r\n[1] 21.87500 29.98359 20.06173 27.28175 27.04164 24.97704\r\n\r\nVamos deixar isso mais bonitinho usando a função de arredondamento round? Nesse caso, coloquei no segundo argumento on número 2 para indicar que arredonde apenas duas casas decimais.\r\n\r\n\r\nround(imc, 2)\r\n\r\n\r\n[1] 21.87 29.98 20.06 27.28 27.04 24.98\r\n\r\nimc <- round(imc, 2) #estou sobrescrevendo um vetor\r\n#arredondado sobre ele mesmo\r\n\r\nimc\r\n\r\n\r\n[1] 21.87 29.98 20.06 27.28 27.04 24.98\r\n\r\nVamos organizar essa informações no formato tabular, embutindo em uma matriz. A matriz nada mais é do que vários vetores. Pensa no vetor como cada coluna de uma “tabela” e a matriz várias colunas (ou vetores no caso) lado a lado. Para colocar os vetores que criamos ali acima lado a lado usamos a função cbind (Bind vem de juntar e c vem de colunas - portanto, juntar colunas).\r\n\r\n\r\nMatriz<-cbind(pesos,alturas,imc)\r\nMatriz\r\n\r\n\r\n     pesos alturas   imc\r\n[1,]    56    1.60 21.87\r\n[2,]    95    1.78 29.98\r\n[3,]    65    1.80 20.06\r\n[4,]    77    1.68 27.28\r\n[5,]    80    1.72 27.04\r\n[6,]    68    1.65 24.98\r\n\r\nAgora você pode estar perguntando: “Daniel, não dá para a gente colocar uma coluna com o nome correspondente e o status do IMC?”… Dá sim, para isso, vamos usar um novo tipo de objeto chamado dataframe. O dataframe é uma estrutura MUUUUUITO importante e tem uma estrutura de tabela. A diferença dela é que - diferente da matriz - cada coluna pode ter um tipo de dado distinto (texto, coluna, char). Em outros capítulos vamos aprender a fazer várias operações de manipulação de um dataframe.\r\n\r\n\r\nlibrary(dplyr)\r\nnomes<-c(\"Alice\",\"Gilmar\",\"Cecilia\",\"Bianca\",\"Valentina\",\"Augusto\") # criando o vetor de nomes\r\n\r\ndf_imc <- as.data.frame(Matriz) # transformando a matriz no formato dataframe\r\n\r\ndf_imc <- cbind(nomes,df_imc)\r\n\r\ndf_imc <- df_imc %>% \r\n            mutate(status = case_when(imc < 16 ~ \"Subpeso Severo\",\r\n                                      imc >= 16 & imc < 20 ~ \"Subpeso\",\r\n                                      imc >= 20 & imc < 25 ~ \"Normal\",\r\n                                      imc >= 25 & imc < 30 ~ \"Sobrepeso\",\r\n                                      imc >= 30 & imc < 40 ~ \"Obeso\",\r\n                                      imc >= 40 ~ \"Obeso Mórbido\"))\r\n\r\ndf_imc\r\n\r\n\r\n      nomes pesos alturas   imc    status\r\n1     Alice    56    1.60 21.87    Normal\r\n2    Gilmar    95    1.78 29.98 Sobrepeso\r\n3   Cecilia    65    1.80 20.06    Normal\r\n4    Bianca    77    1.68 27.28 Sobrepeso\r\n5 Valentina    80    1.72 27.04 Sobrepeso\r\n6   Augusto    68    1.65 24.98    Normal\r\n\r\nPara criar a coluna do status de imc, além de transformar a matriz, tive que transformá-la para um dataframe e aplicar duas funções chamadas mutate e case_when. Peço que por enquanto só rode o script. Teremos uma aula específica para a manipulação de dados. Nos vemos lá! ;)\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-04-18T18:30:57-03:00",
    "input_file": "welcome.utf8.md"
  }
]
